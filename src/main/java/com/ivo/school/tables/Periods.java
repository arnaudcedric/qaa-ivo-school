/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables;


import com.ivo.school.Keys;
import com.ivo.school.Mydb;
import com.ivo.school.tables.records.PeriodsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Periods extends TableImpl<PeriodsRecord> {

    private static final long serialVersionUID = -420893785;

    /**
     * The reference instance of <code>mydb.periods</code>
     */
    public static final Periods PERIODS = new Periods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PeriodsRecord> getRecordType() {
        return PeriodsRecord.class;
    }

    /**
     * The column <code>mydb.periods.id</code>.
     */
    public final TableField<PeriodsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.periods.name</code>.
     */
    public final TableField<PeriodsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>mydb.periods.start_time</code>.
     */
    public final TableField<PeriodsRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>mydb.periods.end_time</code>.
     */
    public final TableField<PeriodsRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>mydb.periods.course_id</code>.
     */
    public final TableField<PeriodsRecord, Integer> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.periods.createdAt</code>.
     */
    public final TableField<PeriodsRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>mydb.periods.updatedAt</code>.
     */
    public final TableField<PeriodsRecord, Timestamp> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>mydb.periods</code> table reference
     */
    public Periods() {
        this("periods", null);
    }

    /**
     * Create an aliased <code>mydb.periods</code> table reference
     */
    public Periods(String alias) {
        this(alias, PERIODS);
    }

    private Periods(String alias, Table<PeriodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Periods(String alias, Table<PeriodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mydb.MYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PeriodsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PERIODS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PeriodsRecord> getPrimaryKey() {
        return Keys.KEY_PERIODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PeriodsRecord>> getKeys() {
        return Arrays.<UniqueKey<PeriodsRecord>>asList(Keys.KEY_PERIODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PeriodsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PeriodsRecord, ?>>asList(Keys.FK_PERIOD_COURSE1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Periods as(String alias) {
        return new Periods(alias, this);
    }

    /**
     * Rename this table
     */
    public Periods rename(String name) {
        return new Periods(name, null);
    }
}
