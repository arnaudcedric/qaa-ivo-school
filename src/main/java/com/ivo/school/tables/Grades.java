/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables;


import com.ivo.school.Keys;
import com.ivo.school.Mydb;
import com.ivo.school.tables.records.GradesRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Grades extends TableImpl<GradesRecord> {

    private static final long serialVersionUID = 1096505216;

    /**
     * The reference instance of <code>mydb.grades</code>
     */
    public static final Grades GRADES = new Grades();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GradesRecord> getRecordType() {
        return GradesRecord.class;
    }

    /**
     * The column <code>mydb.grades.id</code>.
     */
    public final TableField<GradesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.grades.name</code>.
     */
    public final TableField<GradesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>mydb.grades.acronym</code>.
     */
    public final TableField<GradesRecord, String> ACRONYM = createField("acronym", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>mydb.grades.bottom_margin</code>.
     */
    public final TableField<GradesRecord, BigDecimal> BOTTOM_MARGIN = createField("bottom_margin", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>mydb.grades.top_margin</code>.
     */
    public final TableField<GradesRecord, BigDecimal> TOP_MARGIN = createField("top_margin", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>mydb.grades.points</code>.
     */
    public final TableField<GradesRecord, Integer> POINTS = createField("points", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.grades.createdAt</code>.
     */
    public final TableField<GradesRecord, Date> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>mydb.grades.updatedAt</code>.
     */
    public final TableField<GradesRecord, Date> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>mydb.grades</code> table reference
     */
    public Grades() {
        this("grades", null);
    }

    /**
     * Create an aliased <code>mydb.grades</code> table reference
     */
    public Grades(String alias) {
        this(alias, GRADES);
    }

    private Grades(String alias, Table<GradesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Grades(String alias, Table<GradesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mydb.MYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GradesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GRADES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GradesRecord> getPrimaryKey() {
        return Keys.KEY_GRADES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GradesRecord>> getKeys() {
        return Arrays.<UniqueKey<GradesRecord>>asList(Keys.KEY_GRADES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Grades as(String alias) {
        return new Grades(alias, this);
    }

    /**
     * Rename this table
     */
    public Grades rename(String name) {
        return new Grades(name, null);
    }
}
