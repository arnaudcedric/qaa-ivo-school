/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables;


import com.ivo.school.Keys;
import com.ivo.school.Mydb;
import com.ivo.school.tables.records.CourseNotesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseNotes extends TableImpl<CourseNotesRecord> {

    private static final long serialVersionUID = 1398680106;

    /**
     * The reference instance of <code>mydb.course_notes</code>
     */
    public static final CourseNotes COURSE_NOTES = new CourseNotes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseNotesRecord> getRecordType() {
        return CourseNotesRecord.class;
    }

    /**
     * The column <code>mydb.course_notes.id</code>.
     */
    public final TableField<CourseNotesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.course_notes.note_id</code>.
     */
    public final TableField<CourseNotesRecord, Integer> NOTE_ID = createField("note_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.course_notes.course_id</code>.
     */
    public final TableField<CourseNotesRecord, Integer> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.course_notes.createdAt</code>.
     */
    public final TableField<CourseNotesRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>mydb.course_notes.updatedAt</code>.
     */
    public final TableField<CourseNotesRecord, Timestamp> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>mydb.course_notes</code> table reference
     */
    public CourseNotes() {
        this("course_notes", null);
    }

    /**
     * Create an aliased <code>mydb.course_notes</code> table reference
     */
    public CourseNotes(String alias) {
        this(alias, COURSE_NOTES);
    }

    private CourseNotes(String alias, Table<CourseNotesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseNotes(String alias, Table<CourseNotesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mydb.MYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseNotesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseNotesRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_NOTES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseNotesRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseNotesRecord>>asList(Keys.KEY_COURSE_NOTES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CourseNotesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CourseNotesRecord, ?>>asList(Keys.FK_COURSE_NOTES_NOTES, Keys.FK_COURSE_NOTES_COURSES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseNotes as(String alias) {
        return new CourseNotes(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseNotes rename(String name) {
        return new CourseNotes(name, null);
    }
}
