/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables;


import com.ivo.school.Keys;
import com.ivo.school.Mydb;
import com.ivo.school.tables.records.HolidaysRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Holidays extends TableImpl<HolidaysRecord> {

    private static final long serialVersionUID = -1386937780;

    /**
     * The reference instance of <code>mydb.holidays</code>
     */
    public static final Holidays HOLIDAYS = new Holidays();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HolidaysRecord> getRecordType() {
        return HolidaysRecord.class;
    }

    /**
     * The column <code>mydb.holidays.id</code>.
     */
    public final TableField<HolidaysRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.holidays.start_date</code>.
     */
    public final TableField<HolidaysRecord, Date> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>mydb.holidays.end_date</code>.
     */
    public final TableField<HolidaysRecord, Date> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>mydb.holidays.name</code>.
     */
    public final TableField<HolidaysRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>mydb.holidays.acronym</code>.
     */
    public final TableField<HolidaysRecord, String> ACRONYM = createField("acronym", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>mydb.holidays.createdAt</code>.
     */
    public final TableField<HolidaysRecord, Date> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>mydb.holidays.updatedAt</code>.
     */
    public final TableField<HolidaysRecord, Date> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>mydb.holidays</code> table reference
     */
    public Holidays() {
        this("holidays", null);
    }

    /**
     * Create an aliased <code>mydb.holidays</code> table reference
     */
    public Holidays(String alias) {
        this(alias, HOLIDAYS);
    }

    private Holidays(String alias, Table<HolidaysRecord> aliased) {
        this(alias, aliased, null);
    }

    private Holidays(String alias, Table<HolidaysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mydb.MYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HolidaysRecord, Integer> getIdentity() {
        return Keys.IDENTITY_HOLIDAYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HolidaysRecord> getPrimaryKey() {
        return Keys.KEY_HOLIDAYS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HolidaysRecord>> getKeys() {
        return Arrays.<UniqueKey<HolidaysRecord>>asList(Keys.KEY_HOLIDAYS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Holidays as(String alias) {
        return new Holidays(alias, this);
    }

    /**
     * Rename this table
     */
    public Holidays rename(String name) {
        return new Holidays(name, null);
    }
}
