/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables.records;


import com.ivo.school.tables.SchoolData;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchoolDataRecord extends UpdatableRecordImpl<SchoolDataRecord> implements Record10<Integer, String, String, String, String, Timestamp, Timestamp, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = -110812140;

    /**
     * Setter for <code>mydb.school_data.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydb.school_data.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mydb.school_data.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydb.school_data.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mydb.school_data.current_semester</code>.
     */
    public void setCurrentSemester(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mydb.school_data.current_semester</code>.
     */
    public String getCurrentSemester() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mydb.school_data.current_year</code>.
     */
    public void setCurrentYear(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mydb.school_data.current_year</code>.
     */
    public String getCurrentYear() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mydb.school_data.address</code>.
     */
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>mydb.school_data.address</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mydb.school_data.exam_deadline</code>.
     */
    public void setExamDeadline(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>mydb.school_data.exam_deadline</code>.
     */
    public Timestamp getExamDeadline() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>mydb.school_data.assignment_deadline</code>.
     */
    public void setAssignmentDeadline(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>mydb.school_data.assignment_deadline</code>.
     */
    public Timestamp getAssignmentDeadline() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>mydb.school_data.badge_url</code>.
     */
    public void setBadgeUrl(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mydb.school_data.badge_url</code>.
     */
    public String getBadgeUrl() {
        return (String) get(7);
    }

    /**
     * Setter for <code>mydb.school_data.createdAt</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>mydb.school_data.createdAt</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>mydb.school_data.updatedAt</code>.
     */
    public void setUpdatedat(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>mydb.school_data.updatedAt</code>.
     */
    public Timestamp getUpdatedat() {
        return (Timestamp) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, String, String, Timestamp, Timestamp, String, Timestamp, Timestamp> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, String, String, Timestamp, Timestamp, String, Timestamp, Timestamp> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SchoolData.SCHOOL_DATA.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SchoolData.SCHOOL_DATA.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SchoolData.SCHOOL_DATA.CURRENT_SEMESTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SchoolData.SCHOOL_DATA.CURRENT_YEAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SchoolData.SCHOOL_DATA.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return SchoolData.SCHOOL_DATA.EXAM_DEADLINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return SchoolData.SCHOOL_DATA.ASSIGNMENT_DEADLINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return SchoolData.SCHOOL_DATA.BADGE_URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return SchoolData.SCHOOL_DATA.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return SchoolData.SCHOOL_DATA.UPDATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCurrentSemester();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCurrentYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getExamDeadline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getAssignmentDeadline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getBadgeUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getUpdatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value3(String value) {
        setCurrentSemester(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value4(String value) {
        setCurrentYear(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value5(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value6(Timestamp value) {
        setExamDeadline(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value7(Timestamp value) {
        setAssignmentDeadline(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value8(String value) {
        setBadgeUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value9(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord value10(Timestamp value) {
        setUpdatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchoolDataRecord values(Integer value1, String value2, String value3, String value4, String value5, Timestamp value6, Timestamp value7, String value8, Timestamp value9, Timestamp value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchoolDataRecord
     */
    public SchoolDataRecord() {
        super(SchoolData.SCHOOL_DATA);
    }

    /**
     * Create a detached, initialised SchoolDataRecord
     */
    public SchoolDataRecord(Integer id, String name, String currentSemester, String currentYear, String address, Timestamp examDeadline, Timestamp assignmentDeadline, String badgeUrl, Timestamp createdat, Timestamp updatedat) {
        super(SchoolData.SCHOOL_DATA);

        set(0, id);
        set(1, name);
        set(2, currentSemester);
        set(3, currentYear);
        set(4, address);
        set(5, examDeadline);
        set(6, assignmentDeadline);
        set(7, badgeUrl);
        set(8, createdat);
        set(9, updatedat);
    }
}
