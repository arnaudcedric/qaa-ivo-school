/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables.records;


import com.ivo.school.tables.StudentsCoursesExams;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentsCoursesExamsRecord extends UpdatableRecordImpl<StudentsCoursesExamsRecord> implements Record7<Integer, Integer, Integer, Integer, BigDecimal, Timestamp, Timestamp> {

    private static final long serialVersionUID = -1702487151;

    /**
     * Setter for <code>mydb.students_courses_exams.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydb.students_courses_exams.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mydb.students_courses_exams.student_id</code>.
     */
    public void setStudentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydb.students_courses_exams.student_id</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mydb.students_courses_exams.course_id</code>.
     */
    public void setCourseId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mydb.students_courses_exams.course_id</code>.
     */
    public Integer getCourseId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mydb.students_courses_exams.exam_id</code>.
     */
    public void setExamId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>mydb.students_courses_exams.exam_id</code>.
     */
    public Integer getExamId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>mydb.students_courses_exams.score</code>.
     */
    public void setScore(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>mydb.students_courses_exams.score</code>.
     */
    public BigDecimal getScore() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>mydb.students_courses_exams.createdAt</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>mydb.students_courses_exams.createdAt</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>mydb.students_courses_exams.updatedAt</code>.
     */
    public void setUpdatedat(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>mydb.students_courses_exams.updatedAt</code>.
     */
    public Timestamp getUpdatedat() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Integer, BigDecimal, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Integer, BigDecimal, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return StudentsCoursesExams.STUDENTS_COURSES_EXAMS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return StudentsCoursesExams.STUDENTS_COURSES_EXAMS.STUDENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return StudentsCoursesExams.STUDENTS_COURSES_EXAMS.COURSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return StudentsCoursesExams.STUDENTS_COURSES_EXAMS.EXAM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return StudentsCoursesExams.STUDENTS_COURSES_EXAMS.SCORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return StudentsCoursesExams.STUDENTS_COURSES_EXAMS.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return StudentsCoursesExams.STUDENTS_COURSES_EXAMS.UPDATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCourseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getExamId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getScore();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesExamsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesExamsRecord value2(Integer value) {
        setStudentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesExamsRecord value3(Integer value) {
        setCourseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesExamsRecord value4(Integer value) {
        setExamId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesExamsRecord value5(BigDecimal value) {
        setScore(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesExamsRecord value6(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesExamsRecord value7(Timestamp value) {
        setUpdatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesExamsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, BigDecimal value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentsCoursesExamsRecord
     */
    public StudentsCoursesExamsRecord() {
        super(StudentsCoursesExams.STUDENTS_COURSES_EXAMS);
    }

    /**
     * Create a detached, initialised StudentsCoursesExamsRecord
     */
    public StudentsCoursesExamsRecord(Integer id, Integer studentId, Integer courseId, Integer examId, BigDecimal score, Timestamp createdat, Timestamp updatedat) {
        super(StudentsCoursesExams.STUDENTS_COURSES_EXAMS);

        set(0, id);
        set(1, studentId);
        set(2, courseId);
        set(3, examId);
        set(4, score);
        set(5, createdat);
        set(6, updatedat);
    }
}
