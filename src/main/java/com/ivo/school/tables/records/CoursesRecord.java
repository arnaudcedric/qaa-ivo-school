/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables.records;


import com.ivo.school.tables.Courses;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoursesRecord extends UpdatableRecordImpl<CoursesRecord> implements Record9<Integer, Integer, Integer, String, Timestamp, Timestamp, String, Integer, Byte> {

    private static final long serialVersionUID = -1527391496;

    /**
     * Setter for <code>mydb.courses.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydb.courses.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mydb.courses.class_id</code>.
     */
    public void setClassId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydb.courses.class_id</code>.
     */
    public Integer getClassId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mydb.courses.subject_id</code>.
     */
    public void setSubjectId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mydb.courses.subject_id</code>.
     */
    public Integer getSubjectId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mydb.courses.about</code>.
     */
    public void setAbout(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mydb.courses.about</code>.
     */
    public String getAbout() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mydb.courses.createdAt</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>mydb.courses.createdAt</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>mydb.courses.updatedAt</code>.
     */
    public void setUpdatedat(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>mydb.courses.updatedAt</code>.
     */
    public Timestamp getUpdatedat() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>mydb.courses.code</code>.
     */
    public void setCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mydb.courses.code</code>.
     */
    public String getCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mydb.courses.grade_points</code>.
     */
    public void setGradePoints(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>mydb.courses.grade_points</code>.
     */
    public Integer getGradePoints() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>mydb.courses.is_mandatory</code>.
     */
    public void setIsMandatory(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>mydb.courses.is_mandatory</code>.
     */
    public Byte getIsMandatory() {
        return (Byte) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Integer, String, Timestamp, Timestamp, String, Integer, Byte> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Integer, String, Timestamp, Timestamp, String, Integer, Byte> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Courses.COURSES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Courses.COURSES.CLASS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Courses.COURSES.SUBJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Courses.COURSES.ABOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Courses.COURSES.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Courses.COURSES.UPDATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Courses.COURSES.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Courses.COURSES.GRADE_POINTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field9() {
        return Courses.COURSES.IS_MANDATORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getClassId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSubjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAbout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getUpdatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getGradePoints();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value9() {
        return getIsMandatory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value2(Integer value) {
        setClassId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value3(Integer value) {
        setSubjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value4(String value) {
        setAbout(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value5(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value6(Timestamp value) {
        setUpdatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value7(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value8(Integer value) {
        setGradePoints(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord value9(Byte value) {
        setIsMandatory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CoursesRecord values(Integer value1, Integer value2, Integer value3, String value4, Timestamp value5, Timestamp value6, String value7, Integer value8, Byte value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoursesRecord
     */
    public CoursesRecord() {
        super(Courses.COURSES);
    }

    /**
     * Create a detached, initialised CoursesRecord
     */
    public CoursesRecord(Integer id, Integer classId, Integer subjectId, String about, Timestamp createdat, Timestamp updatedat, String code, Integer gradePoints, Byte isMandatory) {
        super(Courses.COURSES);

        set(0, id);
        set(1, classId);
        set(2, subjectId);
        set(3, about);
        set(4, createdat);
        set(5, updatedat);
        set(6, code);
        set(7, gradePoints);
        set(8, isMandatory);
    }
}
