/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables.records;


import com.ivo.school.tables.Grades;

import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GradesRecord extends UpdatableRecordImpl<GradesRecord> implements Record8<Integer, String, String, BigDecimal, BigDecimal, Integer, Date, Date> {

    private static final long serialVersionUID = -554660161;

    /**
     * Setter for <code>mydb.grades.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydb.grades.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mydb.grades.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydb.grades.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mydb.grades.acronym</code>.
     */
    public void setAcronym(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mydb.grades.acronym</code>.
     */
    public String getAcronym() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mydb.grades.bottom_margin</code>.
     */
    public void setBottomMargin(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>mydb.grades.bottom_margin</code>.
     */
    public BigDecimal getBottomMargin() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>mydb.grades.top_margin</code>.
     */
    public void setTopMargin(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>mydb.grades.top_margin</code>.
     */
    public BigDecimal getTopMargin() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>mydb.grades.points</code>.
     */
    public void setPoints(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>mydb.grades.points</code>.
     */
    public Integer getPoints() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>mydb.grades.createdAt</code>.
     */
    public void setCreatedat(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>mydb.grades.createdAt</code>.
     */
    public Date getCreatedat() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>mydb.grades.updatedAt</code>.
     */
    public void setUpdatedat(Date value) {
        set(7, value);
    }

    /**
     * Getter for <code>mydb.grades.updatedAt</code>.
     */
    public Date getUpdatedat() {
        return (Date) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, BigDecimal, BigDecimal, Integer, Date, Date> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, BigDecimal, BigDecimal, Integer, Date, Date> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Grades.GRADES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Grades.GRADES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Grades.GRADES.ACRONYM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Grades.GRADES.BOTTOM_MARGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return Grades.GRADES.TOP_MARGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Grades.GRADES.POINTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return Grades.GRADES.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field8() {
        return Grades.GRADES.UPDATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAcronym();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getBottomMargin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getTopMargin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getPoints();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value8() {
        return getUpdatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord value3(String value) {
        setAcronym(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord value4(BigDecimal value) {
        setBottomMargin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord value5(BigDecimal value) {
        setTopMargin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord value6(Integer value) {
        setPoints(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord value7(Date value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord value8(Date value) {
        setUpdatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GradesRecord values(Integer value1, String value2, String value3, BigDecimal value4, BigDecimal value5, Integer value6, Date value7, Date value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GradesRecord
     */
    public GradesRecord() {
        super(Grades.GRADES);
    }

    /**
     * Create a detached, initialised GradesRecord
     */
    public GradesRecord(Integer id, String name, String acronym, BigDecimal bottomMargin, BigDecimal topMargin, Integer points, Date createdat, Date updatedat) {
        super(Grades.GRADES);

        set(0, id);
        set(1, name);
        set(2, acronym);
        set(3, bottomMargin);
        set(4, topMargin);
        set(5, points);
        set(6, createdat);
        set(7, updatedat);
    }
}
