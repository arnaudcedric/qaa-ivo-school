/**
 * This class is generated by jOOQ
 */
package com.ivo.school.tables;


import com.ivo.school.Keys;
import com.ivo.school.Mydb;
import com.ivo.school.tables.records.AttendancesRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Attendances extends TableImpl<AttendancesRecord> {

    private static final long serialVersionUID = 1538337142;

    /**
     * The reference instance of <code>mydb.attendances</code>
     */
    public static final Attendances ATTENDANCES = new Attendances();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttendancesRecord> getRecordType() {
        return AttendancesRecord.class;
    }

    /**
     * The column <code>mydb.attendances.id</code>.
     */
    public final TableField<AttendancesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.attendances.student_id</code>.
     */
    public final TableField<AttendancesRecord, Integer> STUDENT_ID = createField("student_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.attendances.period_id</code>.
     */
    public final TableField<AttendancesRecord, Integer> PERIOD_ID = createField("period_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>mydb.attendances.createdAt</code>.
     */
    public final TableField<AttendancesRecord, Date> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>mydb.attendances.updatedAt</code>.
     */
    public final TableField<AttendancesRecord, Date> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>mydb.attendances</code> table reference
     */
    public Attendances() {
        this("attendances", null);
    }

    /**
     * Create an aliased <code>mydb.attendances</code> table reference
     */
    public Attendances(String alias) {
        this(alias, ATTENDANCES);
    }

    private Attendances(String alias, Table<AttendancesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Attendances(String alias, Table<AttendancesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mydb.MYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttendancesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ATTENDANCES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttendancesRecord> getPrimaryKey() {
        return Keys.KEY_ATTENDANCES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttendancesRecord>> getKeys() {
        return Arrays.<UniqueKey<AttendancesRecord>>asList(Keys.KEY_ATTENDANCES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AttendancesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AttendancesRecord, ?>>asList(Keys.FK_ATTENDANCE_STUDENTS, Keys.FK_ATTENDANCE_PERIODS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Attendances as(String alias) {
        return new Attendances(alias, this);
    }

    /**
     * Rename this table
     */
    public Attendances rename(String name) {
        return new Attendances(name, null);
    }
}
