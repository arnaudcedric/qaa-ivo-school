/**
 * This class is generated by jOOQ
 */
package com.ivo.tables;


import com.ivo.Ivoschool;
import com.ivo.Keys;
import com.ivo.tables.records.NewsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class News extends TableImpl<NewsRecord> {

    private static final long serialVersionUID = 992460862;

    /**
     * The reference instance of <code>ivoschool.news</code>
     */
    public static final News NEWS = new News();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NewsRecord> getRecordType() {
        return NewsRecord.class;
    }

    /**
     * The column <code>ivoschool.news.id</code>.
     */
    public final TableField<NewsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.news.topic</code>.
     */
    public final TableField<NewsRecord, String> TOPIC = createField("topic", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>ivoschool.news.content</code>.
     */
    public final TableField<NewsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>ivoschool.news.content_url</code>.
     */
    public final TableField<NewsRecord, String> CONTENT_URL = createField("content_url", org.jooq.impl.SQLDataType.VARCHAR.length(205), this, "");

    /**
     * The column <code>ivoschool.news.content_url2</code>.
     */
    public final TableField<NewsRecord, String> CONTENT_URL2 = createField("content_url2", org.jooq.impl.SQLDataType.VARCHAR.length(205), this, "");

    /**
     * The column <code>ivoschool.news.content_url3</code>.
     */
    public final TableField<NewsRecord, String> CONTENT_URL3 = createField("content_url3", org.jooq.impl.SQLDataType.VARCHAR.length(205), this, "");

    /**
     * The column <code>ivoschool.news.lecturer_id</code>.
     */
    public final TableField<NewsRecord, Integer> LECTURER_ID = createField("lecturer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.news.createdAt</code>.
     */
    public final TableField<NewsRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ivoschool.news.updatedAt</code>.
     */
    public final TableField<NewsRecord, Timestamp> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>ivoschool.news</code> table reference
     */
    public News() {
        this("news", null);
    }

    /**
     * Create an aliased <code>ivoschool.news</code> table reference
     */
    public News(String alias) {
        this(alias, NEWS);
    }

    private News(String alias, Table<NewsRecord> aliased) {
        this(alias, aliased, null);
    }

    private News(String alias, Table<NewsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ivoschool.IVOSCHOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NewsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_NEWS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NewsRecord> getPrimaryKey() {
        return Keys.KEY_NEWS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NewsRecord>> getKeys() {
        return Arrays.<UniqueKey<NewsRecord>>asList(Keys.KEY_NEWS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<NewsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NewsRecord, ?>>asList(Keys.FK_NEWS_LECTURER1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public News as(String alias) {
        return new News(alias, this);
    }

    /**
     * Rename this table
     */
    public News rename(String name) {
        return new News(name, null);
    }
}
