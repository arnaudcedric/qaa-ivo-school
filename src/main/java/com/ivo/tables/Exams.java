/**
 * This class is generated by jOOQ
 */
package com.ivo.tables;


import com.ivo.Ivoschool;
import com.ivo.Keys;
import com.ivo.tables.records.ExamsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Exams extends TableImpl<ExamsRecord> {

    private static final long serialVersionUID = 573901985;

    /**
     * The reference instance of <code>ivoschool.exams</code>
     */
    public static final Exams EXAMS = new Exams();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExamsRecord> getRecordType() {
        return ExamsRecord.class;
    }

    /**
     * The column <code>ivoschool.exams.id</code>.
     */
    public final TableField<ExamsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.exams.content</code>.
     */
    public final TableField<ExamsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>ivoschool.exams.content_url</code>.
     */
    public final TableField<ExamsRecord, String> CONTENT_URL = createField("content_url", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>ivoschool.exams.content_url2</code>.
     */
    public final TableField<ExamsRecord, String> CONTENT_URL2 = createField("content_url2", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>ivoschool.exams.content_url3</code>.
     */
    public final TableField<ExamsRecord, String> CONTENT_URL3 = createField("content_url3", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>ivoschool.exams.lecturer_id</code>.
     */
    public final TableField<ExamsRecord, Integer> LECTURER_ID = createField("lecturer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.exams.createdAt</code>.
     */
    public final TableField<ExamsRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ivoschool.exams.updatedAt</code>.
     */
    public final TableField<ExamsRecord, Timestamp> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ivoschool.exams.overall_mark</code>.
     */
    public final TableField<ExamsRecord, Integer> OVERALL_MARK = createField("overall_mark", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.exams.topic</code>.
     */
    public final TableField<ExamsRecord, String> TOPIC = createField("topic", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>ivoschool.exams.semester</code>.
     */
    public final TableField<ExamsRecord, String> SEMESTER = createField("semester", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>ivoschool.exams.percentage</code>.
     */
    public final TableField<ExamsRecord, BigDecimal> PERCENTAGE = createField("percentage", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2), this, "");

    /**
     * Create a <code>ivoschool.exams</code> table reference
     */
    public Exams() {
        this("exams", null);
    }

    /**
     * Create an aliased <code>ivoschool.exams</code> table reference
     */
    public Exams(String alias) {
        this(alias, EXAMS);
    }

    private Exams(String alias, Table<ExamsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Exams(String alias, Table<ExamsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ivoschool.IVOSCHOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ExamsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EXAMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ExamsRecord> getPrimaryKey() {
        return Keys.KEY_EXAMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ExamsRecord>> getKeys() {
        return Arrays.<UniqueKey<ExamsRecord>>asList(Keys.KEY_EXAMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Exams as(String alias) {
        return new Exams(alias, this);
    }

    /**
     * Rename this table
     */
    public Exams rename(String name) {
        return new Exams(name, null);
    }
}
