/**
 * This class is generated by jOOQ
 */
package com.ivo.tables.records;


import com.ivo.tables.Notes;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotesRecord extends UpdatableRecordImpl<NotesRecord> implements Record8<Integer, String, Integer, String, Integer, Timestamp, Timestamp, String> {

    private static final long serialVersionUID = 245610657;

    /**
     * Setter for <code>ivoschool.notes.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ivoschool.notes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ivoschool.notes.note_url</code>.
     */
    public void setNoteUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ivoschool.notes.note_url</code>.
     */
    public String getNoteUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ivoschool.notes.lecturer_id</code>.
     */
    public void setLecturerId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ivoschool.notes.lecturer_id</code>.
     */
    public Integer getLecturerId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>ivoschool.notes.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>ivoschool.notes.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ivoschool.notes.rating</code>.
     */
    public void setRating(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>ivoschool.notes.rating</code>.
     */
    public Integer getRating() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>ivoschool.notes.createdAt</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>ivoschool.notes.createdAt</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>ivoschool.notes.updatedAt</code>.
     */
    public void setUpdatedat(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>ivoschool.notes.updatedAt</code>.
     */
    public Timestamp getUpdatedat() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>ivoschool.notes.about</code>.
     */
    public void setAbout(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>ivoschool.notes.about</code>.
     */
    public String getAbout() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Integer, String, Integer, Timestamp, Timestamp, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, Integer, String, Integer, Timestamp, Timestamp, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Notes.NOTES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Notes.NOTES.NOTE_URL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Notes.NOTES.LECTURER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Notes.NOTES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Notes.NOTES.RATING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Notes.NOTES.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Notes.NOTES.UPDATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Notes.NOTES.ABOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNoteUrl();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getLecturerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getRating();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getAbout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord value2(String value) {
        setNoteUrl(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord value3(Integer value) {
        setLecturerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord value5(Integer value) {
        setRating(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord value6(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord value7(Timestamp value) {
        setUpdatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord value8(String value) {
        setAbout(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotesRecord values(Integer value1, String value2, Integer value3, String value4, Integer value5, Timestamp value6, Timestamp value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotesRecord
     */
    public NotesRecord() {
        super(Notes.NOTES);
    }

    /**
     * Create a detached, initialised NotesRecord
     */
    public NotesRecord(Integer id, String noteUrl, Integer lecturerId, String name, Integer rating, Timestamp createdat, Timestamp updatedat, String about) {
        super(Notes.NOTES);

        set(0, id);
        set(1, noteUrl);
        set(2, lecturerId);
        set(3, name);
        set(4, rating);
        set(5, createdat);
        set(6, updatedat);
        set(7, about);
    }
}
