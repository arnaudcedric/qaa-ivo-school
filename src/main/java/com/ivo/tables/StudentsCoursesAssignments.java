/**
 * This class is generated by jOOQ
 */
package com.ivo.tables;


import com.ivo.Ivoschool;
import com.ivo.Keys;
import com.ivo.tables.records.StudentsCoursesAssignmentsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentsCoursesAssignments extends TableImpl<StudentsCoursesAssignmentsRecord> {

    private static final long serialVersionUID = -688655453;

    /**
     * The reference instance of <code>ivoschool.students_courses_assignments</code>
     */
    public static final StudentsCoursesAssignments STUDENTS_COURSES_ASSIGNMENTS = new StudentsCoursesAssignments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentsCoursesAssignmentsRecord> getRecordType() {
        return StudentsCoursesAssignmentsRecord.class;
    }

    /**
     * The column <code>ivoschool.students_courses_assignments.id</code>.
     */
    public final TableField<StudentsCoursesAssignmentsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.students_courses_assignments.student_id</code>.
     */
    public final TableField<StudentsCoursesAssignmentsRecord, Integer> STUDENT_ID = createField("student_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.students_courses_assignments.course_id</code>.
     */
    public final TableField<StudentsCoursesAssignmentsRecord, Integer> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.students_courses_assignments.assignment_id</code>.
     */
    public final TableField<StudentsCoursesAssignmentsRecord, Integer> ASSIGNMENT_ID = createField("assignment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.students_courses_assignments.score</code>.
     */
    public final TableField<StudentsCoursesAssignmentsRecord, BigDecimal> SCORE = createField("score", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>ivoschool.students_courses_assignments.assignment_url</code>.
     */
    public final TableField<StudentsCoursesAssignmentsRecord, String> ASSIGNMENT_URL = createField("assignment_url", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>ivoschool.students_courses_assignments.createdAt</code>.
     */
    public final TableField<StudentsCoursesAssignmentsRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ivoschool.students_courses_assignments.updatedAt</code>.
     */
    public final TableField<StudentsCoursesAssignmentsRecord, Timestamp> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>ivoschool.students_courses_assignments</code> table reference
     */
    public StudentsCoursesAssignments() {
        this("students_courses_assignments", null);
    }

    /**
     * Create an aliased <code>ivoschool.students_courses_assignments</code> table reference
     */
    public StudentsCoursesAssignments(String alias) {
        this(alias, STUDENTS_COURSES_ASSIGNMENTS);
    }

    private StudentsCoursesAssignments(String alias, Table<StudentsCoursesAssignmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentsCoursesAssignments(String alias, Table<StudentsCoursesAssignmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ivoschool.IVOSCHOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentsCoursesAssignmentsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENTS_COURSES_ASSIGNMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentsCoursesAssignmentsRecord> getPrimaryKey() {
        return Keys.KEY_STUDENTS_COURSES_ASSIGNMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentsCoursesAssignmentsRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentsCoursesAssignmentsRecord>>asList(Keys.KEY_STUDENTS_COURSES_ASSIGNMENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StudentsCoursesAssignmentsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StudentsCoursesAssignmentsRecord, ?>>asList(Keys.FK_STUDENT_COURSES_ASSIGNMENT_STUDENT, Keys.FK_STUDENT_COURSES_ASSIGNMENT_COURSE, Keys.FK_STUDENT_COURSES_ASSIGNMENT_ASSIGNMENT1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentsCoursesAssignments as(String alias) {
        return new StudentsCoursesAssignments(alias, this);
    }

    /**
     * Rename this table
     */
    public StudentsCoursesAssignments rename(String name) {
        return new StudentsCoursesAssignments(name, null);
    }
}
