/**
 * This class is generated by jOOQ
 */
package com.ivo.tables;


import com.ivo.Ivoschool;
import com.ivo.Keys;
import com.ivo.tables.records.PeriodNotesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PeriodNotes extends TableImpl<PeriodNotesRecord> {

    private static final long serialVersionUID = 1729273620;

    /**
     * The reference instance of <code>ivoschool.period_notes</code>
     */
    public static final PeriodNotes PERIOD_NOTES = new PeriodNotes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PeriodNotesRecord> getRecordType() {
        return PeriodNotesRecord.class;
    }

    /**
     * The column <code>ivoschool.period_notes.id</code>.
     */
    public final TableField<PeriodNotesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.period_notes.note_id</code>.
     */
    public final TableField<PeriodNotesRecord, Integer> NOTE_ID = createField("note_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.period_notes.period_id</code>.
     */
    public final TableField<PeriodNotesRecord, Integer> PERIOD_ID = createField("period_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ivoschool.period_notes.createdAt</code>.
     */
    public final TableField<PeriodNotesRecord, Timestamp> CREATEDAT = createField("createdAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ivoschool.period_notes.updatedAt</code>.
     */
    public final TableField<PeriodNotesRecord, Timestamp> UPDATEDAT = createField("updatedAt", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>ivoschool.period_notes</code> table reference
     */
    public PeriodNotes() {
        this("period_notes", null);
    }

    /**
     * Create an aliased <code>ivoschool.period_notes</code> table reference
     */
    public PeriodNotes(String alias) {
        this(alias, PERIOD_NOTES);
    }

    private PeriodNotes(String alias, Table<PeriodNotesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PeriodNotes(String alias, Table<PeriodNotesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ivoschool.IVOSCHOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PeriodNotesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PERIOD_NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PeriodNotesRecord> getPrimaryKey() {
        return Keys.KEY_PERIOD_NOTES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PeriodNotesRecord>> getKeys() {
        return Arrays.<UniqueKey<PeriodNotesRecord>>asList(Keys.KEY_PERIOD_NOTES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PeriodNotesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PeriodNotesRecord, ?>>asList(Keys.FK_PERIOD_NOTES_NOTES, Keys.FK_PERIOD_NOTES_PERIODS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PeriodNotes as(String alias) {
        return new PeriodNotes(alias, this);
    }

    /**
     * Rename this table
     */
    public PeriodNotes rename(String name) {
        return new PeriodNotes(name, null);
    }
}
